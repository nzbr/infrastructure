// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../utilities";

declare var exports: any;
const __config = new pulumi.Config("powerdns");

/**
 * REST API authentication key
 */
export declare const apiKey: string | undefined;
Object.defineProperty(exports, "apiKey", {
    get() {
        return __config.get("apiKey");
    },
    enumerable: true,
});

/**
 * Content or path of a Root CA to be used to verify PowerDNS's SSL certificate
 */
export declare const caCertificate: string | undefined;
Object.defineProperty(exports, "caCertificate", {
    get() {
        return __config.get("caCertificate");
    },
    enumerable: true,
});

/**
 * Set cache memory size in MB
 */
export declare const cacheMemSize: string | undefined;
Object.defineProperty(exports, "cacheMemSize", {
    get() {
        return __config.get("cacheMemSize");
    },
    enumerable: true,
});

/**
 * Enable cache REST API requests
 */
export declare const cacheRequests: boolean | undefined;
Object.defineProperty(exports, "cacheRequests", {
    get() {
        return __config.getObject<boolean>("cacheRequests");
    },
    enumerable: true,
});

/**
 * Set cache TTL in seconds
 */
export declare const cacheTtl: number | undefined;
Object.defineProperty(exports, "cacheTtl", {
    get() {
        return __config.getObject<number>("cacheTtl");
    },
    enumerable: true,
});

/**
 * Disable verification of the PowerDNS server's TLS certificate
 */
export declare const insecureHttps: boolean | undefined;
Object.defineProperty(exports, "insecureHttps", {
    get() {
        return __config.getObject<boolean>("insecureHttps");
    },
    enumerable: true,
});

/**
 * Location of PowerDNS server
 */
export declare const serverUrl: string | undefined;
Object.defineProperty(exports, "serverUrl", {
    get() {
        return __config.get("serverUrl");
    },
    enumerable: true,
});

